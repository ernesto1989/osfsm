<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>My Node + EJS + Bulma App</title>

  <!-- Stylesheets -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css">
  <link rel="stylesheet" href="./css/bulma-theme.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/w2ui@1.5.rc1/w2ui.min.css" />

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/jquery@3.7.1/dist/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/w2ui@1.5.rc1/w2ui.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

  <style>
    html, body {
      margin: 0;
      height: 100%;
      overflow: hidden;
    }

    .navbar {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 1000;
    }

    #sidebar {
      position: fixed;
      top: 3.25rem;
      bottom: 0;
      left: 0;
      width: 240px;
      min-width: 240px;
      overflow-y: auto;
      background-color: #f5f5f5;
      border-right: 1px solid #dbdbdb;
      padding: 1rem;
    }

    #main-content {
      position: absolute;
      top: 3.25rem;
      left: 50px;
      right: 0;
      bottom: 0;
      overflow-y: auto;
      padding: 1.5rem;
    }

    .equal-height {
      display: flex;
      flex-direction: column;
      height: 100%;
    }

    .theme-header a {
      color: inherit;
      cursor: pointer;
    }

    .apexcharts-canvas {
      height: 200px !important;
    }
  </style>

  <script>
    let selectedScenario = '';

    $(document).ready(function () {
      $(".navbar-burger").click(function () {
        var target = $(this).data("target");
        $("#" + target).toggleClass("is-active");
        $(this).toggleClass("is-active");
      });

      $('#newScenario').on('click', function () {
        $('#newModal').addClass('is-active');
      });

      $('#closeModalBtn, #closeModalFooter, .modal-background').on('click', function () {
        $('#newModal').removeClass('is-active');
      });

      $('#sidebar-list').on('click', 'a', function (e) {
        e.preventDefault();
        const scenarioId = $(this).data('id');
        handleScenarioClick(scenarioId);
      });

      handleScenarioClick('scenario1');

      $('#deleteScenario').on('click', function () {
        if (!selectedScenario) return;

        // Set the modal content
        $('#scenarioToDelete').text(selectedScenario);
        $('#deleteConfirmModal').addClass('is-active');
      });

      // Close modal on cancel
      $('#cancelDeleteBtn, #cancelDeleteFooter, .modal-background').on('click', function () {
        $('#deleteConfirmModal').removeClass('is-active');
      });

      // Confirm deletion
      $('#confirmDeleteBtn').on('click', function () {
        $(`#sidebar-list a[data-id="${selectedScenario}"]`).parent().remove();
        $('#deleteConfirmModal').removeClass('is-active');

        selectedScenario = '';
        $('#selected_scenario').text("No scenario selected");
        $('#donut-chart, #bar-chart').empty();
      });

      $('#submitScenarioBtn').on('click', function () {
        const name = $('#scenarioName').val().trim();

        if (!name) {
          $('#scenarioNameError').show(); // Show the error
          $('#scenarioName').addClass('is-danger'); // Add red border
          return;
        } else {
          $('#scenarioNameError').hide(); // Hide the error if present
          $('#scenarioName').removeClass('is-danger');
        }

        const description = $('#scenarioDescription').val().trim();
        const baseScenario = $('#baseScenarioSelect').val();

        console.log('Creating Scenario:', { name, description, baseScenario });

        $('#newModal').removeClass('is-active');
      });
    });

    function toggleTheme() {
      $('body').toggleClass('dark-mode light-mode');
    }

    function handleScenarioClick(scenarioId) {
      selectedScenario = scenarioId;
      $('#sidebar-list a').removeClass('is-selected');
      $(`#sidebar-list a[data-id="${scenarioId}"]`).addClass('is-selected');

      $('#donut-chart').empty();
      $('#bar-chart').empty();
      renderDonutChart();
      renderBarChart();
    }

    function renderDonutChart(systemPercent = 90.3, unusedPercent = 9.7) {
      const options = {
        chart: { type: 'donut', height: 200 },
        labels: ['System State', 'Unused Capacity'],
        series: [systemPercent, unusedPercent],
        colors: ['green', 'gray'],
        dataLabels: { formatter: val => val.toFixed(1) + '%' },
        legend: { position: 'bottom' }
      };
      new ApexCharts(document.querySelector("#donut-chart"), options).render();
    }

    function renderBarChart() {
      const nodeMetadata = {
        N01: { state: 'Filling', timeToLimit: 12 },
        N02: { state: 'Stable', timeToLimit: '--' },
        N03: { state: 'Draining', timeToLimit: 9 },
        N04: { state: 'Stable', timeToLimit: '--' },
        N05: { state: 'Draining', timeToLimit: 7 },
        N06: { state: 'Filling', timeToLimit: 10 }
      };

      const stateIcons = {
        'Filling': 'üü®',
        'Draining': 'üü•',
        'Stable': 'üü©'
      };

      const options = {
        chart: {
          type: 'bar',
          height: 200,
          stacked: false,
          toolbar: { show: false }
        },
        series: [
          { name: 'Min Vol (MM3)', data: [50, 60, 55, 40, 45, 50] },
          { name: 'Current Vol (MM3)', data: [90, 130, 115, 100, 105, 110] },
          { name: 'Max Vol (MM3)', data: [120, 150, 140, 125, 130, 135] }
        ],
        xaxis: {
          categories: ['N01', 'N02', 'N03', 'N04', 'N05', 'N06']
        },
        tooltip: {
          custom: function ({ series, seriesIndex, dataPointIndex, w }) {
            const node = w.config.xaxis.categories[dataPointIndex];
            const min = w.config.series[0].data[dataPointIndex];
            const curr = w.config.series[1].data[dataPointIndex];
            const max = w.config.series[2].data[dataPointIndex];
            const meta = nodeMetadata[node] || { state: 'N/A', timeToLimit: 'N/A' };

            const icon = stateIcons[meta.state] || '';
            const ttl = meta.timeToLimit;
            const warning = (typeof ttl === 'number' && ttl <= 10) ? '<span style="color:red">‚ö†Ô∏è</span>' : '';

            return `
              <div style="padding: 8px; font-size: 0.9rem; line-height: 1.4">
                <strong>${node} ${icon}</strong><br/>
                <em>State:</em> ${meta.state}<br/>
                <em>Time to Limit:</em> ${ttl} hrs ${warning}<br/>
                <em>Min:</em> ${min} MM3<br/>
                <em>Current:</em> ${curr} MM3<br/>
                <em>Max:</em> ${max} MM3
              </div>
            `;
          }
        },
        legend: { position: 'bottom' },
        colors: ['#66b3ff', '#3366cc', '#003399']
      };

      new ApexCharts(document.querySelector("#bar-chart"), options).render();
    }

    function openNodesWindow() {
      alert(`Opening ${selectedScenario} nodes`);
    }

    function openCurrentState() {
      alert(`Opening ${selectedScenario} current state analysis`);
    }

    
  </script>
</head>

<body class="light-mode">

  <!-- Navbar -->
  <nav class="navbar is-light" role="navigation" aria-label="main navigation">
    <div class="navbar-brand">
      <a class="navbar-item has-text-weight-bold" href="/">MyApp</a>
      <a class="navbar-item" id="newScenario">
        <span class="icon"><i class="fas fa-plus"></i></span>
        <span>New Scenario</span>
      </a>
      <a class="navbar-item" id="deleteScenario">
        <span class="icon"><i class="fas fa-trash-alt"></i></span>
        <span>Delete Scenario</span>
      </a>
      <a role="button" class="navbar-burger" aria-label="menu" aria-expanded="false" data-target="main-navbar">
        <span aria-hidden="true"></span><span aria-hidden="true"></span><span aria-hidden="true"></span>
      </a>
    </div>
    <div id="main-navbar" class="navbar-menu">
      <div class="navbar-end">
        <div class="navbar-item has-dropdown is-hoverable">
          <a class="navbar-link">Settings</a>
          <div class="navbar-dropdown is-right">
            <a class="navbar-item">Profile</a>
            <a class="navbar-item">Account</a>
            <hr class="navbar-divider">
            <a class="navbar-item" onclick="toggleTheme()">Toggle Dark Mode</a>
            <a class="navbar-item">Logout</a>
          </div>
        </div>
      </div>
    </div>
  </nav>

  <!-- Modal -->
  <div class="modal" id="newModal">
    <div class="modal-background"></div>
    <div class="modal-card">
      <header class="modal-card-head">
        <p class="modal-card-title">Create New Scenario</p>
        <button class="delete" aria-label="close" id="closeModalBtn"></button>
      </header>

      <section class="modal-card-body">
        <form id="scenarioForm">
          <!-- Scenario Name -->
          <div class="field">
            <label class="label">Scenario Name <span class="has-text-danger">*</span></label>
            <div class="control">
              <input class="input" type="text" id="scenarioName" placeholder="Enter scenario name" required>
            </div>
            <p class="help is-danger" id="scenarioNameError" style="display: none;">Scenario name is required.</p>
          </div>

          <!-- Description -->
          <div class="field">
            <label class="label">Description</label>
            <div class="control">
              <textarea class="textarea" id="scenarioDescription" placeholder="Optional description" rows="3"
                style="resize: none;"></textarea>
            </div>
          </div>

          <!-- Base Scenario -->
          <div class="field">
            <label class="label">Base Scenario</label>
            <div class="control">
              <div class="select is-fullwidth">
                <select id="baseScenarioSelect">
                  <option value="">Empty Scenario (File Upload)</option>
                  <option value="scenario1">Scenario 1</option>
                  <option value="scenario2">Scenario 2</option>
                  <!-- More options can be dynamically populated -->
                </select>
              </div>
            </div>
          </div>
        </form>
      </section>

      <footer class="modal-card-foot is-justify-content-flex-end">
        <button class="button is-primary" id="submitScenarioBtn">Create</button>
        <button class="button" id="closeModalFooter">Cancel</button>
      </footer>
    </div>
  </div>

  <!-- Delete Confirmation Modal -->
  <div class="modal" id="deleteConfirmModal">
    <div class="modal-background"></div>
    <div class="modal-card">
      <header class="modal-card-head">
        <p class="modal-card-title">Delete Scenario</p>
        <button class="delete" aria-label="close" id="cancelDeleteBtn"></button>
      </header>
      <section class="modal-card-body">
        <p>Are you sure you want to delete the scenario: <strong id="scenarioToDelete"></strong>?</p>
      </section>
      <footer class="modal-card-foot is-justify-content-flex-end">
        <button class="button" id="cancelDeleteFooter">Cancel</button>
        <button class="button is-danger" id="confirmDeleteBtn">Delete</button>
      </footer>
    </div>
  </div>

  <!-- Sidebar -->
  <aside id="sidebar">
    <p class="menu-label has-text-weight-bold mt-4 ml-2">Scenarios</p>
    <ul class="menu-list" id="sidebar-list">
      <li><a href="#" data-id="scenario1">Scenario 1</a></li>
      <li><a href="#" data-id="scenario2">Scenario 2</a></li>
    </ul>
  </aside>

  <!-- Main Content -->
  <main id="main-content">

    <div class="columns is-multiline mb-4">
      <!-- Nodes -->
      <div class="column is-one-quarter">
        <div class="card card-metric">
          <div class="card-content has-text-centered">
            <p class="title is-6">Nodes: <strong>6</strong></p>
          </div>
          <footer class="card-footer">
            <a href="#" class="card-footer-item">View Details <span class="icon"><i
                  class="fas fa-angle-right"></i></span></a>
          </footer>
        </div>
      </div>

      <!-- Consumers -->
      <div class="column is-one-quarter">
        <div class="card card-metric">
          <div class="card-content has-text-centered">
            <p class="title is-6">Consumers: <strong>1</strong></p>
          </div>
          <footer class="card-footer">
            <a href="#" class="card-footer-item">View Details <span class="icon"><i
                  class="fas fa-angle-right"></i></span></a>
          </footer>
        </div>
      </div>

      <!-- Flows -->
      <div class="column is-one-quarter">
        <div class="card card-metric">
          <div class="card-content has-text-centered">
            <p class="title is-6">Flows: <strong>11</strong></p>
          </div>
          <footer class="card-footer">
            <a href="#" class="card-footer-item">View Details <span class="icon"><i
                  class="fas fa-angle-right"></i></span></a>
          </footer>
        </div>
      </div>

      <!-- Warnings -->
      <div class="column is-one-quarter">
        <div class="card card-metric">
          <div class="card-content has-text-centered">
            <p class="title is-6">Warnings: <strong>2</strong></p>
          </div>
          <footer class="card-footer">
            <a href="#" class="card-footer-item">View Details <span class="icon"><i
                  class="fas fa-angle-right"></i></span></a>
          </footer>
        </div>
      </div>
    </div>

    <h2 class="subtitle has-text-weight-bold">Current State Details <a>View Details</a></h2>

    <div id="scenario-content">
      <div class="columns">
        <!-- DONUT CHART-->
        <div class="column is-half">
          <div class="box equal-height">
            <div class="theme-header has-text-centered has-text-weight-bold p-2">
              <a onclick="openNodesWindow()">Current Vol.</a>
            </div>
            <div id="donut-chart"></div>
          </div>
        </div>
        <!-- BAR CHART-->
        <div class="column is-half">
          <div class="box equal-height">
            <div class="theme-header has-text-centered has-text-weight-bold p-2">
              <a onclick="openNodesWindow()">Nodes</a>
            </div>
            <div id="bar-chart"></div>
          </div>
        </div>
      </div>
    </div>
  </main>

</body>

</html>